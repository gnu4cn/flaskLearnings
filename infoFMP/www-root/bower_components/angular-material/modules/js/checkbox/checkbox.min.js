/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.0-rc.5-master-15da974
 */
!function(e,t,n){"use strict";function i(e,n,i,c,d,o){function a(a,r){var u=a.children(),l=d.parseAttributeBoolean(r.mdIndeterminate);return r.$set("tabindex",r.tabindex||"0"),r.$set("type","checkbox"),r.$set("role",r.type),a.on("click",function(e){this.hasAttribute("disabled")&&e.stopImmediatePropagation()}),u.on("focus",function(){a.focus()}),function(a,r,u,m){function f(e,t,n){u[e]&&a.$watch(u[e],function(e){n[e]&&r.attr(t,n[e])})}function p(e){var t=e.which||e.keyCode;t!==i.KEY_CODE.SPACE&&t!==i.KEY_CODE.ENTER||(e.preventDefault(),r.hasClass("md-focused")||r.addClass("md-focused"),v(e))}function v(e){r[0].hasAttribute("disabled")||a.skipToggle||a.$apply(function(){var t=u.ngChecked?u.checked:!m.$viewValue;m.$setViewValue(t,e&&e.type),m.$render()})}function h(){m.$viewValue&&!b?r.addClass(s):r.removeClass(s)}function $(e){b=e!==!1,b&&r.attr("aria-checked","mixed"),r.toggleClass("md-indeterminate",b)}var b;m=m||d.fakeNgModel(),c(r),l&&($(),a.$watch(u.mdIndeterminate,$)),u.ngChecked&&a.$watch(a.$eval.bind(a,u.ngChecked),m.$setViewValue.bind(m)),f("ngDisabled","tabindex",{"true":"-1","false":u.tabindex}),n.expectWithText(r,"aria-label"),e.link.pre(a,{on:t.noop,0:{}},u,[m]),a.mouseActive=!1,r.on("click",v).on("keypress",p).on("mousedown",function(){a.mouseActive=!0,o(function(){a.mouseActive=!1},100)}).on("focus",function(){a.mouseActive===!1&&r.addClass("md-focused")}).on("blur",function(){r.removeClass("md-focused")}),m.$render=h}}e=e[0];var s="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",priority:210,template:'<div class="_md-container" md-ink-ripple md-ink-ripple-checkbox><div class="_md-icon"></div></div><div ng-transclude class="_md-label"></div>',compile:a}}t.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",i),i.$inject=["inputDirective","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"]}(window,window.angular);